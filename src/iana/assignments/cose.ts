// DO NOT edit this file, it is generated automatically
export const reserved_key_parameter = {
  'Name': 'Reserved',
  'Label': 0,
  'CBOR Type': '',
  'Value Registry': '',
  'Description': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9052'
}
export const kty_key_parameter = {
  'Name': 'kty',
  'Label': 1,
  'CBOR Type': 'tstr / int',
  'Value Registry': 'COSE Key Types',
  'Description': 'Identification of the key type',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9052'
}
export const kid_key_parameter = {
  'Name': 'kid',
  'Label': 2,
  'CBOR Type': 'bstr',
  'Value Registry': '',
  'Description': 'Key identification value - match to kid in message',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9052'
}
export const alg_key_parameter = {
  'Name': 'alg',
  'Label': 3,
  'CBOR Type': 'tstr / int',
  'Value Registry': 'COSE Algorithms',
  'Description': 'Key usage restriction to this algorithm',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9052'
}
export const key_ops_key_parameter = {
  'Name': 'key_ops',
  'Label': 4,
  'CBOR Type': '[+ (tstr/int)]',
  'Value Registry': '',
  'Description': 'Restrict set of permissible operations',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9052'
}
export const base_iv_key_parameter = {
  'Name': 'Base IV',
  'Label': 5,
  'CBOR Type': 'bstr',
  'Value Registry': '',
  'Description': 'Base IV to be XORed with Partial IVs',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9052'
}
export enum cose_key {
  kty = 1,
  kid = 2,
  alg = 3,
  key_ops = 4,
  base_iv = 5,
}

export const reserved_key_type = {
  'Name': 'Reserved',
  'Value': 0,
  'Description': 'This value is reserved',
  'Capabilities': '',
  'Reference': 'https://datatracker.ietf.org/doc/rfc9053'
}
export const okp_key_type = {
  'Name': 'OKP',
  'Value': 1,
  'Description': 'Octet Key Pair',
  'Capabilities': '[kty(1), crv]',
  'Reference': 'https://datatracker.ietf.org/doc/rfc9053'
}
export const ec2_key_type = {
  'Name': 'EC2',
  'Value': 2,
  'Description': 'Elliptic Curve Keys w/ x- and y-coordinate pair',
  'Capabilities': '[kty(2), crv]',
  'Reference': 'https://datatracker.ietf.org/doc/rfc9053'
}
export const rsa_key_type = {
  'Name': 'RSA',
  'Value': 3,
  'Description': 'RSA Key',
  'Capabilities': '[kty(3)]',
  'Reference': 'https://datatracker.ietf.org/doc/rfc8230 https://datatracker.ietf.org/doc/rfc9053'
}
export const symmetric_key_type = {
  'Name': 'Symmetric',
  'Value': 4,
  'Description': 'Symmetric Keys',
  'Capabilities': '[kty(4)]',
  'Reference': 'https://datatracker.ietf.org/doc/rfc9053'
}
export const hss_lms_key_type = {
  'Name': 'HSS-LMS',
  'Value': 5,
  'Description': 'Public key for HSS/LMS hash-based digital signature',
  'Capabilities': '[kty(5), hash algorithm]',
  'Reference': 'https://datatracker.ietf.org/doc/rfc8778 https://datatracker.ietf.org/doc/rfc9053'
}
export const walnutdsa_key_type = {
  'Name': 'WalnutDSA',
  'Value': 6,
  'Description': 'WalnutDSA public key',
  'Capabilities': '[kty(6)]',
  'Reference': 'https://datatracker.ietf.org/doc/rfc9021 https://datatracker.ietf.org/doc/rfc9053'
}
export enum cose_key_type {
  okp = 1,
  ec2 = 2,
  rsa = 3,
  symmetric = 4,
  hss_lms = 5,
  walnutdsa = 6,
}


export const reserved_curve = {
  'Name': 'Reserved',
  'Value': 0,
  'Key Type': '',
  'Description': '',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/rfc9053',
  'Recommended': 'No'
}
export const p_256_curve = {
  'Name': 'P-256',
  'Value': 1,
  'Key Type': 'EC2',
  'Description': 'NIST P-256 also known as secp256r1',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/rfc9053',
  'Recommended': 'Yes'
}
export const p_384_curve = {
  'Name': 'P-384',
  'Value': 2,
  'Key Type': 'EC2',
  'Description': 'NIST P-384 also known as secp384r1',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/rfc9053',
  'Recommended': 'Yes'
}
export const p_521_curve = {
  'Name': 'P-521',
  'Value': 3,
  'Key Type': 'EC2',
  'Description': 'NIST P-521 also known as secp521r1',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/rfc9053',
  'Recommended': 'Yes'
}
export const x25519_curve = {
  'Name': 'X25519',
  'Value': 4,
  'Key Type': 'OKP',
  'Description': 'X25519 for use w/ ECDH only',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/rfc9053',
  'Recommended': 'Yes'
}
export const x448_curve = {
  'Name': 'X448',
  'Value': 5,
  'Key Type': 'OKP',
  'Description': 'X448 for use w/ ECDH only',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/rfc9053',
  'Recommended': 'Yes'
}
export const ed25519_curve = {
  'Name': 'Ed25519',
  'Value': 6,
  'Key Type': 'OKP',
  'Description': 'Ed25519 for use w/ EdDSA only',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/rfc9053',
  'Recommended': 'Yes'
}
export const ed448_curve = {
  'Name': 'Ed448',
  'Value': 7,
  'Key Type': 'OKP',
  'Description': 'Ed448 for use w/ EdDSA only',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/rfc9053',
  'Recommended': 'Yes'
}
export const secp256k1_curve = {
  'Name': 'secp256k1',
  'Value': 8,
  'Key Type': 'EC2',
  'Description': 'SECG secp256k1 curve',
  'Change Controller': 'IESG',
  'Reference': 'https://datatracker.ietf.org/doc/rfc8812',
  'Recommended': 'No'
}
export const brainpoolp256r1_curve = {
  'Name': 'brainpoolP256r1',
  'Value': 256,
  'Key Type': 'EC2',
  'Description': 'BrainpoolP256r1',
  'Change Controller': '[ISO/IEC JTC 1/SC 17/WG 10]',
  'Reference': '[ISO/IEC 18013-5:2021, 9.1.5.2]',
  'Recommended': 'No'
}
export const brainpoolp320r1_curve = {
  'Name': 'brainpoolP320r1',
  'Value': 257,
  'Key Type': 'EC2',
  'Description': 'BrainpoolP320r1',
  'Change Controller': '[ISO/IEC JTC 1/SC 17/WG 10]',
  'Reference': '[ISO/IEC 18013-5:2021, 9.1.5.2]',
  'Recommended': 'No'
}
export const brainpoolp384r1_curve = {
  'Name': 'brainpoolP384r1',
  'Value': 258,
  'Key Type': 'EC2',
  'Description': 'BrainpoolP384r1',
  'Change Controller': '[ISO/IEC JTC 1/SC 17/WG 10]',
  'Reference': '[ISO/IEC 18013-5:2021, 9.1.5.2]',
  'Recommended': 'No'
}
export const brainpoolp512r1_curve = {
  'Name': 'brainpoolP512r1',
  'Value': 259,
  'Key Type': 'EC2',
  'Description': 'BrainpoolP512r1',
  'Change Controller': '[ISO/IEC JTC 1/SC 17/WG 10]',
  'Reference': '[ISO/IEC 18013-5:2021, 9.1.5.2]',
  'Recommended': 'No'
}
export enum ec2_curves {
  p_256 = 1,
  p_384 = 2,
  p_521 = 3,
  secp256k1 = 8,
  brainpoolp256r1 = 256,
  brainpoolp320r1 = 257,
  brainpoolp384r1 = 258,
  brainpoolp512r1 = 259,
}
export enum okp_curves {
  x25519 = 4,
  x448 = 5,
  ed25519 = 6,
  ed448 = 7,
}


export const rs1_algorithm = {
  'Name': 'RS1',
  'Value': -65535,
  'Description': 'RSASSA-PKCS1-v1_5 using SHA-1',
  'Capabilities': '[kty]',
  'Change Controller': 'IESG',
  'Reference': 'https://datatracker.ietf.org/doc/RFC8812][RFC9053',
  'Recommended': 'Deprecated'
}
export const a128ctr_algorithm = {
  'Name': 'A128CTR',
  'Value': -65534,
  'Description': 'AES-CTR w/ 128-bit key',
  'Capabilities': '[kty]',
  'Change Controller': 'IETF',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9459',
  'Recommended': 'Deprecated'
}
export const a192ctr_algorithm = {
  'Name': 'A192CTR',
  'Value': -65533,
  'Description': 'AES-CTR w/ 192-bit key',
  'Capabilities': '[kty]',
  'Change Controller': 'IETF',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9459',
  'Recommended': 'Deprecated'
}
export const a256ctr_algorithm = {
  'Name': 'A256CTR',
  'Value': -65532,
  'Description': 'AES-CTR w/ 256-bit key',
  'Capabilities': '[kty]',
  'Change Controller': 'IETF',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9459',
  'Recommended': 'Deprecated'
}
export const a128cbc_algorithm = {
  'Name': 'A128CBC',
  'Value': -65531,
  'Description': 'AES-CBC w/ 128-bit key',
  'Capabilities': '[kty]',
  'Change Controller': 'IETF',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9459',
  'Recommended': 'Deprecated'
}
export const a192cbc_algorithm = {
  'Name': 'A192CBC',
  'Value': -65530,
  'Description': 'AES-CBC w/ 192-bit key',
  'Capabilities': '[kty]',
  'Change Controller': 'IETF',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9459',
  'Recommended': 'Deprecated'
}
export const a256cbc_algorithm = {
  'Name': 'A256CBC',
  'Value': -65529,
  'Description': 'AES-CBC w/ 256-bit key',
  'Capabilities': '[kty]',
  'Change Controller': 'IETF',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9459',
  'Recommended': 'Deprecated'
}
export const walnutdsa_algorithm = {
  'Name': 'WalnutDSA',
  'Value': -260,
  'Description': 'WalnutDSA signature',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9021][RFC9053',
  'Recommended': 'No'
}
export const rs512_algorithm = {
  'Name': 'RS512',
  'Value': -259,
  'Description': 'RSASSA-PKCS1-v1_5 using SHA-512',
  'Capabilities': '[kty]',
  'Change Controller': 'IESG',
  'Reference': 'https://datatracker.ietf.org/doc/RFC8812][RFC9053',
  'Recommended': 'No'
}
export const rs384_algorithm = {
  'Name': 'RS384',
  'Value': -258,
  'Description': 'RSASSA-PKCS1-v1_5 using SHA-384',
  'Capabilities': '[kty]',
  'Change Controller': 'IESG',
  'Reference': 'https://datatracker.ietf.org/doc/RFC8812][RFC9053',
  'Recommended': 'No'
}
export const rs256_algorithm = {
  'Name': 'RS256',
  'Value': -257,
  'Description': 'RSASSA-PKCS1-v1_5 using SHA-256',
  'Capabilities': '[kty]',
  'Change Controller': 'IESG',
  'Reference': 'https://datatracker.ietf.org/doc/RFC8812][RFC9053',
  'Recommended': 'No'
}
export const es256k_algorithm = {
  'Name': 'ES256K',
  'Value': -47,
  'Description': 'ECDSA using secp256k1 curve and SHA-256',
  'Capabilities': '[kty]',
  'Change Controller': 'IESG',
  'Reference': 'https://datatracker.ietf.org/doc/RFC8812][RFC9053',
  'Recommended': 'No'
}
export const hss_lms_algorithm = {
  'Name': 'HSS-LMS',
  'Value': -46,
  'Description': 'HSS/LMS hash-based digital signature',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC8778][RFC9053',
  'Recommended': 'Yes'
}
export const shake256_algorithm = {
  'Name': 'SHAKE256',
  'Value': -45,
  'Description': 'SHAKE-256 512-bit Hash Value',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9054][RFC9053',
  'Recommended': 'Yes'
}
export const sha_512_algorithm = {
  'Name': 'SHA-512',
  'Value': -44,
  'Description': 'SHA-2 512-bit Hash',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9054][RFC9053',
  'Recommended': 'Yes'
}
export const sha_384_algorithm = {
  'Name': 'SHA-384',
  'Value': -43,
  'Description': 'SHA-2 384-bit Hash',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9054][RFC9053',
  'Recommended': 'Yes'
}
export const rsaes_oaep_w__sha_512_algorithm = {
  'Name': 'RSAES-OAEP w/ SHA-512',
  'Value': -42,
  'Description': 'RSAES-OAEP w/ SHA-512',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC8230][RFC9053',
  'Recommended': 'Yes'
}
export const rsaes_oaep_w__sha_256_algorithm = {
  'Name': 'RSAES-OAEP w/ SHA-256',
  'Value': -41,
  'Description': 'RSAES-OAEP w/ SHA-256',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC8230][RFC9053',
  'Recommended': 'Yes'
}
export const rsaes_oaep_w__rfc_8017_default_parameters_algorithm = {
  'Name': 'RSAES-OAEP w/ RFC 8017 default parameters',
  'Value': -40,
  'Description': 'RSAES-OAEP w/ SHA-1',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC8230][RFC9053',
  'Recommended': 'Yes'
}
export const ps512_algorithm = {
  'Name': 'PS512',
  'Value': -39,
  'Description': 'RSASSA-PSS w/ SHA-512',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC8230][RFC9053',
  'Recommended': 'Yes'
}
export const ps384_algorithm = {
  'Name': 'PS384',
  'Value': -38,
  'Description': 'RSASSA-PSS w/ SHA-384',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC8230][RFC9053',
  'Recommended': 'Yes'
}
export const ps256_algorithm = {
  'Name': 'PS256',
  'Value': -37,
  'Description': 'RSASSA-PSS w/ SHA-256',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC8230][RFC9053',
  'Recommended': 'Yes'
}
export const es512_algorithm = {
  'Name': 'ES512',
  'Value': -36,
  'Description': 'ECDSA w/ SHA-512',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const es384_algorithm = {
  'Name': 'ES384',
  'Value': -35,
  'Description': 'ECDSA w/ SHA-384',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const ecdh_ss___a256kw_algorithm = {
  'Name': 'ECDH-SS + A256KW',
  'Value': -34,
  'Description': 'ECDH SS w/ Concat KDF and AES Key Wrap w/ 256-bit key',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const ecdh_ss___a192kw_algorithm = {
  'Name': 'ECDH-SS + A192KW',
  'Value': -33,
  'Description': 'ECDH SS w/ Concat KDF and AES Key Wrap w/ 192-bit key',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const ecdh_ss___a128kw_algorithm = {
  'Name': 'ECDH-SS + A128KW',
  'Value': -32,
  'Description': 'ECDH SS w/ Concat KDF and AES Key Wrap w/ 128-bit key',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const ecdh_es___a256kw_algorithm = {
  'Name': 'ECDH-ES + A256KW',
  'Value': -31,
  'Description': 'ECDH ES w/ Concat KDF and AES Key Wrap w/ 256-bit key',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const ecdh_es___a192kw_algorithm = {
  'Name': 'ECDH-ES + A192KW',
  'Value': -30,
  'Description': 'ECDH ES w/ Concat KDF and AES Key Wrap w/ 192-bit key',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const ecdh_es___a128kw_algorithm = {
  'Name': 'ECDH-ES + A128KW',
  'Value': -29,
  'Description': 'ECDH ES w/ Concat KDF and AES Key Wrap w/ 128-bit key',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const ecdh_ss___hkdf_512_algorithm = {
  'Name': 'ECDH-SS + HKDF-512',
  'Value': -28,
  'Description': 'ECDH SS w/ HKDF - generate key directly',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const ecdh_ss___hkdf_256_algorithm = {
  'Name': 'ECDH-SS + HKDF-256',
  'Value': -27,
  'Description': 'ECDH SS w/ HKDF - generate key directly',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const ecdh_es___hkdf_512_algorithm = {
  'Name': 'ECDH-ES + HKDF-512',
  'Value': -26,
  'Description': 'ECDH ES w/ HKDF - generate key directly',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const ecdh_es___hkdf_256_algorithm = {
  'Name': 'ECDH-ES + HKDF-256',
  'Value': -25,
  'Description': 'ECDH ES w/ HKDF - generate key directly',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const shake128_algorithm = {
  'Name': 'SHAKE128',
  'Value': -18,
  'Description': 'SHAKE-128 256-bit Hash Value',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9054][RFC9053',
  'Recommended': 'Yes'
}
export const sha_512_256_algorithm = {
  'Name': 'SHA-512/256',
  'Value': -17,
  'Description': 'SHA-2 512-bit Hash truncated to 256-bits',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9054][RFC9053',
  'Recommended': 'Yes'
}
export const sha_256_algorithm = {
  'Name': 'SHA-256',
  'Value': -16,
  'Description': 'SHA-2 256-bit Hash',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9054][RFC9053',
  'Recommended': 'Yes'
}
export const sha_256_64_algorithm = {
  'Name': 'SHA-256/64',
  'Value': -15,
  'Description': 'SHA-2 256-bit Hash truncated to 64-bits',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9054][RFC9053',
  'Recommended': 'Filter Only'
}
export const sha_1_algorithm = {
  'Name': 'SHA-1',
  'Value': -14,
  'Description': 'SHA-1 Hash',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9054][RFC9053',
  'Recommended': 'Filter Only'
}
export const direct_hkdf_aes_256_algorithm = {
  'Name': 'direct+HKDF-AES-256',
  'Value': -13,
  'Description': 'Shared secret w/ AES-MAC 256-bit key',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const direct_hkdf_aes_128_algorithm = {
  'Name': 'direct+HKDF-AES-128',
  'Value': -12,
  'Description': 'Shared secret w/ AES-MAC 128-bit key',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const direct_hkdf_sha_512_algorithm = {
  'Name': 'direct+HKDF-SHA-512',
  'Value': -11,
  'Description': 'Shared secret w/ HKDF and SHA-512',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const direct_hkdf_sha_256_algorithm = {
  'Name': 'direct+HKDF-SHA-256',
  'Value': -10,
  'Description': 'Shared secret w/ HKDF and SHA-256',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const eddsa_algorithm = {
  'Name': 'EdDSA',
  'Value': -8,
  'Description': 'EdDSA',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const es256_algorithm = {
  'Name': 'ES256',
  'Value': -7,
  'Description': 'ECDSA w/ SHA-256',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const direct_algorithm = {
  'Name': 'direct',
  'Value': -6,
  'Description': 'Direct use of CEK',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const a256kw_algorithm = {
  'Name': 'A256KW',
  'Value': -5,
  'Description': 'AES Key Wrap w/ 256-bit key',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const a192kw_algorithm = {
  'Name': 'A192KW',
  'Value': -4,
  'Description': 'AES Key Wrap w/ 192-bit key',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const a128kw_algorithm = {
  'Name': 'A128KW',
  'Value': -3,
  'Description': 'AES Key Wrap w/ 128-bit key',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const a128gcm_algorithm = {
  'Name': 'A128GCM',
  'Value': 1,
  'Description': 'AES-GCM mode w/ 128-bit key, 128-bit tag',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const a192gcm_algorithm = {
  'Name': 'A192GCM',
  'Value': 2,
  'Description': 'AES-GCM mode w/ 192-bit key, 128-bit tag',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const a256gcm_algorithm = {
  'Name': 'A256GCM',
  'Value': 3,
  'Description': 'AES-GCM mode w/ 256-bit key, 128-bit tag',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const hmac_256_64_algorithm = {
  'Name': 'HMAC 256/64',
  'Value': 4,
  'Description': 'HMAC w/ SHA-256 truncated to 64 bits',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const hmac_256_256_algorithm = {
  'Name': 'HMAC 256/256',
  'Value': 5,
  'Description': 'HMAC w/ SHA-256',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const hmac_384_384_algorithm = {
  'Name': 'HMAC 384/384',
  'Value': 6,
  'Description': 'HMAC w/ SHA-384',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const hmac_512_512_algorithm = {
  'Name': 'HMAC 512/512',
  'Value': 7,
  'Description': 'HMAC w/ SHA-512',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const aes_ccm_16_64_128_algorithm = {
  'Name': 'AES-CCM-16-64-128',
  'Value': 10,
  'Description': 'AES-CCM mode 128-bit key, 64-bit tag, 13-byte nonce',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const aes_ccm_16_64_256_algorithm = {
  'Name': 'AES-CCM-16-64-256',
  'Value': 11,
  'Description': 'AES-CCM mode 256-bit key, 64-bit tag, 13-byte nonce',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const aes_ccm_64_64_128_algorithm = {
  'Name': 'AES-CCM-64-64-128',
  'Value': 12,
  'Description': 'AES-CCM mode 128-bit key, 64-bit tag, 7-byte nonce',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const aes_ccm_64_64_256_algorithm = {
  'Name': 'AES-CCM-64-64-256',
  'Value': 13,
  'Description': 'AES-CCM mode 256-bit key, 64-bit tag, 7-byte nonce',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const aes_mac_128_64_algorithm = {
  'Name': 'AES-MAC 128/64',
  'Value': 14,
  'Description': 'AES-MAC 128-bit key, 64-bit tag',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const aes_mac_256_64_algorithm = {
  'Name': 'AES-MAC 256/64',
  'Value': 15,
  'Description': 'AES-MAC 256-bit key, 64-bit tag',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const chacha20_poly1305_algorithm = {
  'Name': 'ChaCha20/Poly1305',
  'Value': 24,
  'Description': 'ChaCha20/Poly1305 w/ 256-bit key, 128-bit tag',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const aes_mac_128_128_algorithm = {
  'Name': 'AES-MAC 128/128',
  'Value': 25,
  'Description': 'AES-MAC 128-bit key, 128-bit tag',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const aes_mac_256_128_algorithm = {
  'Name': 'AES-MAC 256/128',
  'Value': 26,
  'Description': 'AES-MAC 256-bit key, 128-bit tag',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const aes_ccm_16_128_128_algorithm = {
  'Name': 'AES-CCM-16-128-128',
  'Value': 30,
  'Description': 'AES-CCM mode 128-bit key, 128-bit tag, 13-byte nonce',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const aes_ccm_16_128_256_algorithm = {
  'Name': 'AES-CCM-16-128-256',
  'Value': 31,
  'Description': 'AES-CCM mode 256-bit key, 128-bit tag, 13-byte nonce',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const aes_ccm_64_128_128_algorithm = {
  'Name': 'AES-CCM-64-128-128',
  'Value': 32,
  'Description': 'AES-CCM mode 128-bit key, 128-bit tag, 7-byte nonce',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const aes_ccm_64_128_256_algorithm = {
  'Name': 'AES-CCM-64-128-256',
  'Value': 33,
  'Description': 'AES-CCM mode 256-bit key, 128-bit tag, 7-byte nonce',
  'Capabilities': '[kty]',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'Yes'
}
export const iv_generation_algorithm = {
  'Name': 'IV-GENERATION',
  'Value': 34,
  'Description': 'For doing IV generation for symmetric algorithms.',
  'Capabilities': '',
  'Change Controller': '',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053',
  'Recommended': 'No'
}


export const delegated_to_the_cose_header_algorithm_parameters_registry_algorithm = {
  'Name': 'delegated to the COSE Header Algorithm Parameters registry',
  'Label': -65536,
  'Value Type': '',
  'Value Registry': '',
  'Change Controller': 'undefined',
  'Description': "",
  'Reference': ''
}
export const alg_algorithm = {
  'Name': 'alg',
  'Label': 1,
  'Value Type': 'int / tstr',
  'Value Registry': 'COSE Algorithms registry',
  'Change Controller': 'undefined',
  'Description': "Cryptographic algorithm to use",
  'Reference': 'https://datatracker.ietf.org/doc/RFC9052'
}
export const crit_algorithm = {
  'Name': 'crit',
  'Label': 2,
  'Value Type': '[+ label]',
  'Value Registry': 'COSE Header Parameters registry',
  'Change Controller': 'undefined',
  'Description': "Critical headers to be understood",
  'Reference': 'https://datatracker.ietf.org/doc/RFC9052'
}
export const content_type_algorithm = {
  'Name': 'content type',
  'Label': 3,
  'Value Type': 'tstr / uint',
  'Value Registry': '[COAP Content-Formats] or [Media Types] registry',
  'Change Controller': 'undefined',
  'Description': "Content type of the payload",
  'Reference': 'https://datatracker.ietf.org/doc/RFC9052'
}
export const kid_algorithm = {
  'Name': 'kid',
  'Label': 4,
  'Value Type': 'bstr',
  'Value Registry': '',
  'Change Controller': 'undefined',
  'Description': "Key identifier",
  'Reference': 'https://datatracker.ietf.org/doc/RFC9052'
}
export const iv_algorithm = {
  'Name': 'IV',
  'Label': 5,
  'Value Type': 'bstr',
  'Value Registry': '',
  'Change Controller': 'undefined',
  'Description': "Full Initialization Vector",
  'Reference': 'https://datatracker.ietf.org/doc/RFC9052'
}
export const partial_iv_algorithm = {
  'Name': 'Partial IV',
  'Label': 6,
  'Value Type': 'bstr',
  'Value Registry': '',
  'Change Controller': 'undefined',
  'Description': "Partial Initialization Vector",
  'Reference': 'https://datatracker.ietf.org/doc/RFC9052'
}
export const counter_signature_algorithm = {
  'Name': 'counter signature',
  'Label': 7,
  'Value Type': 'COSE_Signature / [+ COSE_Signature ]',
  'Value Registry': '',
  'Change Controller': 'undefined',
  'Description': "CBOR-encoded signature structure (Deprecated by [RFC9338])",
  'Reference': 'https://datatracker.ietf.org/doc/RFC8152'
}
export const countersignature0_algorithm = {
  'Name': 'CounterSignature0',
  'Label': 9,
  'Value Type': 'bstr',
  'Value Registry': '',
  'Change Controller': 'undefined',
  'Description': "Counter signature with implied signer and headers (Deprecated by [RFC9338])",
  'Reference': 'https://datatracker.ietf.org/doc/RFC8152'
}
export const kid_context_algorithm = {
  'Name': 'kid context',
  'Label': 10,
  'Value Type': 'bstr',
  'Value Registry': '',
  'Change Controller': 'undefined',
  'Description': "Identifies the context for the key identifier",
  'Reference': 'https://datatracker.ietf.org/doc/RFC8613, Section 5.1'
}
export const countersignature_version_2_algorithm = {
  'Name': 'Countersignature version 2',
  'Label': 11,
  'Value Type': 'COSE_Countersignature / [+ COSE_Countersignature]',
  'Value Registry': '',
  'Change Controller': 'undefined',
  'Description': "V2 countersignature attribute",
  'Reference': 'https://datatracker.ietf.org/doc/RFC9338'
}
export const countersignature0_version_2_algorithm = {
  'Name': 'Countersignature0 version 2',
  'Label': 12,
  'Value Type': 'COSE_Countersignature0',
  'Value Registry': '',
  'Change Controller': 'undefined',
  'Description': "V2 Abbreviated Countersignature",
  'Reference': 'https://datatracker.ietf.org/doc/RFC9338'
}
export const kcwt_algorithm = {
  'Name': 'kcwt',
  'Label': 13,
  'Value Type': 'COSE_Messages',
  'Value Registry': '',
  'Change Controller': 'undefined',
  'Description': "A CBOR Web Token (CWT) containing a COSE_Key in a 'cnf' claim and possibly other claims. CWT is defined in [RFC8392]. COSE_Messages is defined in [RFC9052].",
  'Reference': 'https://datatracker.ietf.org/doc/RFC9528'
}
export const kccs_algorithm = {
  'Name': 'kccs',
  'Label': 14,
  'Value Type': 'map',
  'Value Registry': '',
  'Change Controller': 'undefined',
  'Description': "A CWT Claims Set (CCS) containing a COSE_Key in a 'cnf' claim and possibly other claims. CCS is defined in [RFC8392].",
  'Reference': 'https://datatracker.ietf.org/doc/RFC9528'
}
export const cwt_claims_algorithm = {
  'Name': 'CWT Claims',
  'Label': 15,
  'Value Type': 'map',
  'Value Registry': 'map keys in [CWT Claims]',
  'Change Controller': 'undefined',
  'Description': "Location for CWT Claims in COSE Header Parameters.",
  'Reference': 'https://datatracker.ietf.org/doc/RFC9597, Section 2'
}
export const typ__type__algorithm = {
  'Name': 'typ (type)',
  'Label': 16,
  'Value Type': 'uint / tstr',
  'Value Registry': '[COAP Content-Formats] or [Media Types] registry',
  'Change Controller': 'undefined',
  'Description': "Content type of the complete COSE object",
  'Reference': 'https://datatracker.ietf.org/doc/RFC9596, Section 2'
}
export const c5t_algorithm = {
  'Name': 'c5t',
  'Label': 22,
  'Value Type': 'COSE_CertHash',
  'Value Registry': '',
  'Change Controller': 'undefined',
  'Description': "Hash of a C509Certificate (TEMPORARY - registered 2024-03-11, expires 2025-03-11)",
  'Reference': '[draft-ietf-cose-cbor-encoded-cert-09]'
}
export const c5u_algorithm = {
  'Name': 'c5u',
  'Label': 23,
  'Value Type': 'uri',
  'Value Registry': '',
  'Change Controller': 'undefined',
  'Description': "URI pointing to a COSE_C509 containing a ordered chain of certificates (TEMPORARY - registered 2024-03-11, expires 2025-03-11)",
  'Reference': '[draft-ietf-cose-cbor-encoded-cert-09]'
}
export const c5b_algorithm = {
  'Name': 'c5b',
  'Label': 24,
  'Value Type': 'COSE_C509',
  'Value Registry': '',
  'Change Controller': 'undefined',
  'Description': "An unordered bag of C509 certificates (TEMPORARY - registered 2024-03-11, expires 2025-03-11)",
  'Reference': '[draft-ietf-cose-cbor-encoded-cert-09]'
}
export const c5c_algorithm = {
  'Name': 'c5c',
  'Label': 25,
  'Value Type': 'COSE_C509',
  'Value Registry': '',
  'Change Controller': 'undefined',
  'Description': "An ordered chain of C509 certificates (TEMPORARY - registered 2024-03-11, expires 2025-03-11)",
  'Reference': '[draft-ietf-cose-cbor-encoded-cert-09]'
}
export const x5bag_algorithm = {
  'Name': 'x5bag',
  'Label': 32,
  'Value Type': 'COSE_X509',
  'Value Registry': '',
  'Change Controller': 'undefined',
  'Description': "An unordered bag of X.509 certificates",
  'Reference': 'https://datatracker.ietf.org/doc/RFC9360'
}
export const x5chain_algorithm = {
  'Name': 'x5chain',
  'Label': 33,
  'Value Type': 'COSE_X509',
  'Value Registry': '',
  'Change Controller': 'undefined',
  'Description': "An ordered chain of X.509 certificates",
  'Reference': 'https://datatracker.ietf.org/doc/RFC9360'
}
export const x5t_algorithm = {
  'Name': 'x5t',
  'Label': 34,
  'Value Type': 'COSE_CertHash',
  'Value Registry': '',
  'Change Controller': 'undefined',
  'Description': "Hash of an X.509 certificate",
  'Reference': 'https://datatracker.ietf.org/doc/RFC9360'
}
export const x5u_algorithm = {
  'Name': 'x5u',
  'Label': 35,
  'Value Type': 'uri',
  'Value Registry': '',
  'Change Controller': 'undefined',
  'Description': "URI pointing to an X.509 certificate",
  'Reference': 'https://datatracker.ietf.org/doc/RFC9360'
}
export const cuphnonce_algorithm = {
  'Name': 'CUPHNonce',
  'Label': 256,
  'Value Type': 'bstr',
  'Value Registry': '',
  'Change Controller': 'undefined',
  'Description': "Challenge Nonce",
  'Reference': '[FIDO Device Onboard Specification]'
}
export const cuphownerpubkey_algorithm = {
  'Name': 'CUPHOwnerPubKey',
  'Label': 257,
  'Value Type': 'array',
  'Value Registry': '',
  'Change Controller': 'undefined',
  'Description': "Public Key",
  'Reference': '[FIDO Device Onboard Specification]'
}

export const okp_crv_parameter = {
  'Key Type': 1,
  'Label': -1,
  'Name': 'crv',
  'CBOR Type': 'int / tstr',
  'Description': 'EC identifier -- Taken from the "COSE Elliptic Curves" registry',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053'
}
export const okp_x_parameter = {
  'Key Type': 1,
  'Label': -2,
  'Name': 'x',
  'CBOR Type': 'bstr',
  'Description': 'Public Key',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053'
}
export const okp_d_parameter = {
  'Key Type': 1,
  'Label': -4,
  'Name': 'd',
  'CBOR Type': 'bstr',
  'Description': 'Private key',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053'
}
export const ec2_crv_parameter = {
  'Key Type': 2,
  'Label': -1,
  'Name': 'crv',
  'CBOR Type': 'int / tstr',
  'Description': 'EC identifier -- Taken from the "COSE Elliptic Curves" registry',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053'
}
export const ec2_x_parameter = {
  'Key Type': 2,
  'Label': -2,
  'Name': 'x',
  'CBOR Type': 'bstr',
  'Description': 'x-coordinate',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053'
}
export const ec2_y_parameter = {
  'Key Type': 2,
  'Label': -3,
  'Name': 'y',
  'CBOR Type': 'bstr / bool',
  'Description': 'y-coordinate',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053'
}
export const ec2_d_parameter = {
  'Key Type': 2,
  'Label': -4,
  'Name': 'd',
  'CBOR Type': 'bstr',
  'Description': 'Private key',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053'
}
export const rsa_n_parameter = {
  'Key Type': 3,
  'Label': -1,
  'Name': 'n',
  'CBOR Type': 'bstr',
  'Description': 'the RSA modulus n',
  'Reference': 'https://datatracker.ietf.org/doc/RFC8230'
}
export const rsa_e_parameter = {
  'Key Type': 3,
  'Label': -2,
  'Name': 'e',
  'CBOR Type': 'bstr',
  'Description': 'the RSA public exponent e',
  'Reference': 'https://datatracker.ietf.org/doc/RFC8230'
}
export const rsa_d_parameter = {
  'Key Type': 3,
  'Label': -3,
  'Name': 'd',
  'CBOR Type': 'bstr',
  'Description': 'the RSA private exponent d',
  'Reference': 'https://datatracker.ietf.org/doc/RFC8230'
}
export const rsa_p_parameter = {
  'Key Type': 3,
  'Label': -4,
  'Name': 'p',
  'CBOR Type': 'bstr',
  'Description': 'the prime factor p of n',
  'Reference': 'https://datatracker.ietf.org/doc/RFC8230'
}
export const rsa_q_parameter = {
  'Key Type': 3,
  'Label': -5,
  'Name': 'q',
  'CBOR Type': 'bstr',
  'Description': 'the prime factor q of n',
  'Reference': 'https://datatracker.ietf.org/doc/RFC8230'
}
export const rsa_dp_parameter = {
  'Key Type': 3,
  'Label': -6,
  'Name': 'dP',
  'CBOR Type': 'bstr',
  'Description': 'dP is d mod (p - 1)',
  'Reference': 'https://datatracker.ietf.org/doc/RFC8230'
}
export const rsa_dq_parameter = {
  'Key Type': 3,
  'Label': -7,
  'Name': 'dQ',
  'CBOR Type': 'bstr',
  'Description': 'dQ is d mod (q - 1)',
  'Reference': 'https://datatracker.ietf.org/doc/RFC8230'
}
export const rsa_qinv_parameter = {
  'Key Type': 3,
  'Label': -8,
  'Name': 'qInv',
  'CBOR Type': 'bstr',
  'Description': 'qInv is the CRT coefficient q^(-1) mod p',
  'Reference': 'https://datatracker.ietf.org/doc/RFC8230'
}
export const rsa_other_parameter = {
  'Key Type': 3,
  'Label': -9,
  'Name': 'other',
  'CBOR Type': 'array',
  'Description': 'other prime infos, an array',
  'Reference': 'https://datatracker.ietf.org/doc/RFC8230'
}
export const rsa_r_i_parameter = {
  'Key Type': 3,
  'Label': -10,
  'Name': 'r_i',
  'CBOR Type': 'bstr',
  'Description': 'a prime factor r_i of n, where i >= 3',
  'Reference': 'https://datatracker.ietf.org/doc/RFC8230'
}
export const rsa_d_i_parameter = {
  'Key Type': 3,
  'Label': -11,
  'Name': 'd_i',
  'CBOR Type': 'bstr',
  'Description': 'd_i = d mod (r_i - 1)',
  'Reference': 'https://datatracker.ietf.org/doc/RFC8230'
}
export const rsa_t_i_parameter = {
  'Key Type': 3,
  'Label': -12,
  'Name': 't_i',
  'CBOR Type': 'bstr',
  'Description': 'the CRT coefficient t_i = (r_1 * r_2 * ... *        r_(i-1))^(-1) mod r_i',
  'Reference': 'https://datatracker.ietf.org/doc/RFC8230'
}
export const symmetric_k_parameter = {
  'Key Type': 4,
  'Label': -1,
  'Name': 'k',
  'CBOR Type': 'bstr',
  'Description': 'Key Value',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9053'
}
export const hss_lms_pub_parameter = {
  'Key Type': 5,
  'Label': -1,
  'Name': 'pub',
  'CBOR Type': 'bstr',
  'Description': 'Public key for HSS/LMS hash-based digital signature',
  'Reference': 'https://datatracker.ietf.org/doc/RFC8778'
}
export const walnutdsa_n_parameter = {
  'Key Type': 6,
  'Label': -1,
  'Name': 'N',
  'CBOR Type': 'uint',
  'Description': 'Group and Matrix (NxN) size',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9021'
}
export const walnutdsa_q_parameter = {
  'Key Type': 6,
  'Label': -2,
  'Name': 'q',
  'CBOR Type': 'uint',
  'Description': 'Finite field F_q',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9021'
}
export const walnutdsa_t_values_parameter = {
  'Key Type': 6,
  'Label': -3,
  'Name': 't-values',
  'CBOR Type': 'array (of uint)',
  'Description': 'List of T-values, entries in F_q',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9021'
}
export const walnutdsa_matrix_1_parameter = {
  'Key Type': 6,
  'Label': -4,
  'Name': 'matrix 1',
  'CBOR Type': 'array (of array of uint)',
  'Description': 'NxN Matrix of entries in F_q in column-major form',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9021'
}
export const walnutdsa_permutation_1_parameter = {
  'Key Type': 6,
  'Label': -5,
  'Name': 'permutation 1',
  'CBOR Type': 'array (of uint)',
  'Description': 'Permutation associated with matrix 1',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9021'
}
export const walnutdsa_matrix_2_parameter = {
  'Key Type': 6,
  'Label': -6,
  'Name': 'matrix 2',
  'CBOR Type': 'array (of array of uint)',
  'Description': 'NxN Matrix of entries in F_q in column-major form',
  'Reference': 'https://datatracker.ietf.org/doc/RFC9021'
}
export enum okp {
  kty = 1,
  kid = 2,
  alg = 3,
  key_ops = 4,
  base_iv = 5,
  crv = -1,
  x = -2,
  d = -4,
}

export enum ec2 {
  kty = 1,
  kid = 2,
  alg = 3,
  key_ops = 4,
  base_iv = 5,
  crv = -1,
  x = -2,
  y = -3,
  d = -4,
}

export enum rsa {
  kty = 1,
  kid = 2,
  alg = 3,
  key_ops = 4,
  base_iv = 5,
  n = -1,
  e = -2,
  d = -3,
  p = -4,
  q = -5,
  dp = -6,
  dq = -7,
  qinv = -8,
  other = -9,
  r_i = -10,
  d_i = -11,
  t_i = -12,
}

export enum symmetric {
  kty = 1,
  kid = 2,
  alg = 3,
  key_ops = 4,
  base_iv = 5,
  k = -1,
}

export enum hss_lms {
  kty = 1,
  kid = 2,
  alg = 3,
  key_ops = 4,
  base_iv = 5,
  pub = -1,
}

export enum walnutdsa {
  kty = 1,
  kid = 2,
  alg = 3,
  key_ops = 4,
  base_iv = 5,
  n = -1,
  q = -2,
  t_values = -3,
  matrix_1 = -4,
  permutation_1 = -5,
  matrix_2 = -6,
}


export type any_cose_key = {
  get(k: cose_key.kid): Buffer
  get(k: cose_key.alg): string | number
  get(k: cose_key.key_ops): [ (string|number)]
  get(k: cose_key.base_iv): Buffer
}

export type okp_key = any_cose_key & {
  get(k: okp.kty): cose_key_type.okp
  get(k: okp.crv): okp_curves
  get(k: okp.x): Buffer
  get(k: okp.d): Buffer
}

export type ec2_key = any_cose_key & {
  get(k: ec2.kty): cose_key_type.ec2
  get(k: ec2.crv): ec2_curves
  get(k: ec2.x): Buffer
  get(k: ec2.y): Buffer | boolean
  get(k: ec2.d): Buffer
}

export type rsa_key = any_cose_key & {
  get(k: rsa.kty): cose_key_type.rsa
  get(k: rsa.n): Buffer
  get(k: rsa.e): Buffer
  get(k: rsa.d): Buffer
  get(k: rsa.p): Buffer
  get(k: rsa.q): Buffer
  get(k: rsa.dp): Buffer
  get(k: rsa.dq): Buffer
  get(k: rsa.qinv): Buffer
  get(k: rsa.other): Array<any>
  get(k: rsa.r_i): Buffer
  get(k: rsa.d_i): Buffer
  get(k: rsa.t_i): Buffer
}

export type symmetric_key = any_cose_key & {
  get(k: symmetric.kty): cose_key_type.symmetric
  get(k: symmetric.k): Buffer
}

export type hss_lms_key = any_cose_key & {
  get(k: hss_lms.kty): cose_key_type.hss_lms
  get(k: hss_lms.pub): Buffer
}

export type walnutdsa_key = any_cose_key & {
  get(k: walnutdsa.kty): cose_key_type.walnutdsa
  get(k: walnutdsa.n): number
  get(k: walnutdsa.q): number
  get(k: walnutdsa.t_values): Array<number>
  get(k: walnutdsa.matrix_1): Array<Array<number>>
  get(k: walnutdsa.permutation_1): Array<number>
  get(k: walnutdsa.matrix_2): Array<Array<number>>
}


// kty
export const label_to_key_type = new Map([[0,"reserved"],[1,"OKP"],[2,"EC"],[3,"RSA"],[4,"oct"],[5,"hss_lms"],[6,"walnutdsa"]]) as Map<number,string>
export const key_type_to_label = new Map([...label_to_key_type.entries()].map((e: any) => e.reverse())) as Map<string, number>

// crv
export const label_to_curve = new Map([[1,"P-256"],[2,"P-384"],[3,"P-521"],[8,"secp256k1"],[256,"brainpoolp256r1"],[257,"brainpoolp320r1"],[258,"brainpoolp384r1"],[259,"brainpoolp512r1"],[4,"X25519"],[5,"X448"],[6,"Ed25519"],[7,"Ed448"]]) as Map<number, string>
export const curve_to_label = new Map([...label_to_curve.entries()].map((e: any) => e.reverse())) as Map<string, number>

// alg
export const labels_to_algorithms = new Map([[-65535,"RS1"],[-65534,"A128CTR"],[-65533,"A192CTR"],[-65532,"A256CTR"],[-65531,"A128CBC"],[-65530,"A192CBC"],[-65529,"A256CBC"],[-260,"WalnutDSA"],[-259,"RS512"],[-258,"RS384"],[-257,"RS256"],[-47,"ES256K"],[-46,"HSS-LMS"],[-45,"SHAKE256"],[-44,"SHA-512"],[-43,"SHA-384"],[-42,"RSAES-OAEP w/ SHA-512"],[-41,"RSAES-OAEP w/ SHA-256"],[-40,"RSAES-OAEP w/ RFC 8017 default parameters"],[-39,"PS512"],[-38,"PS384"],[-37,"PS256"],[-36,"ES512"],[-35,"ES384"],[-34,"ECDH-SS + A256KW"],[-33,"ECDH-SS + A192KW"],[-32,"ECDH-SS + A128KW"],[-31,"ECDH-ES + A256KW"],[-30,"ECDH-ES + A192KW"],[-29,"ECDH-ES + A128KW"],[-28,"ECDH-SS + HKDF-512"],[-27,"ECDH-SS + HKDF-256"],[-26,"ECDH-ES + HKDF-512"],[-25,"ECDH-ES + HKDF-256"],[-18,"SHAKE128"],[-17,"SHA-512/256"],[-16,"SHA-256"],[-15,"SHA-256/64"],[-14,"SHA-1"],[-13,"direct+HKDF-AES-256"],[-12,"direct+HKDF-AES-128"],[-11,"direct+HKDF-SHA-512"],[-10,"direct+HKDF-SHA-256"],[-8,"EdDSA"],[-7,"ES256"],[-6,"direct"],[-5,"A256KW"],[-4,"A192KW"],[-3,"A128KW"],[1,"A128GCM"],[2,"A192GCM"],[3,"A256GCM"],[4,"HMAC 256/64"],[5,"HMAC 256/256"],[6,"HMAC 384/384"],[7,"HMAC 512/512"],[10,"AES-CCM-16-64-128"],[11,"AES-CCM-16-64-256"],[12,"AES-CCM-64-64-128"],[13,"AES-CCM-64-64-256"],[14,"AES-MAC 128/64"],[15,"AES-MAC 256/64"],[24,"ChaCha20/Poly1305"],[25,"AES-MAC 128/128"],[26,"AES-MAC 256/128"],[30,"AES-CCM-16-128-128"],[31,"AES-CCM-16-128-256"],[32,"AES-CCM-64-128-128"],[33,"AES-CCM-64-128-256"],[34,"IV-GENERATION"]]) as Map<number, string>
export const algorithms_to_labels = new Map([...labels_to_algorithms.entries()].map((e: any) => e.reverse())) as Map<string, number>

// headers
export const labels_to_headers = new Map([[-65536,"delegated to the COSE Header Algorithm Parameters registry"],[1,"alg"],[2,"crit"],[3,"content type"],[4,"kid"],[5,"IV"],[6,"Partial IV"],[7,"counter signature"],[9,"CounterSignature0"],[10,"kid context"],[11,"Countersignature version 2"],[12,"Countersignature0 version 2"],[13,"kcwt"],[14,"kccs"],[15,"CWT Claims"],[16,"typ (type)"],[22,"c5t"],[23,"c5u"],[24,"c5b"],[25,"c5c"],[32,"x5bag"],[33,"x5chain"],[34,"x5t"],[35,"x5u"],[256,"CUPHNonce"],[257,"CUPHOwnerPubKey"]]) as Map<number, string>
export const headers_to_labels = new Map([...labels_to_headers.entries()].map((e: any) => e.reverse())) as Map<string, number>

// okp
export const labels_to_okp_params = new Map([[1,"kty"],[2,"kid"],[3,"alg"],[4,"key_ops"],[5,"base_iv"],[-1,"crv"],[-2,"x"],[-4,"d"]]) as Map<number, string>
export const okp_params_to_labels = new Map([...labels_to_okp_params.entries()].map((e: any) => e.reverse())) as Map<string, number>

// ec2
export const labels_to_ec2_params = new Map([[1,"kty"],[2,"kid"],[3,"alg"],[4,"key_ops"],[5,"base_iv"],[-1,"crv"],[-2,"x"],[-3,"y"],[-4,"d"]]) as Map<number, string>
export const ec2_params_to_labels = new Map([...labels_to_ec2_params.entries()].map((e: any) => e.reverse())) as Map<string, number>

// rsa
export const labels_to_rsa_params = new Map([[1,"kty"],[2,"kid"],[3,"alg"],[4,"key_ops"],[5,"base_iv"],[-1,"n"],[-2,"e"],[-3,"d"],[-4,"p"],[-5,"q"],[-6,"dp"],[-7,"dq"],[-8,"qinv"],[-9,"other"],[-10,"r_i"],[-11,"d_i"],[-12,"t_i"]]) as Map<number, string>
export const rsa_params_to_labels = new Map([...labels_to_rsa_params.entries()].map((e: any) => e.reverse())) as Map<string, number>

// symmetric
export const labels_to_symmetric_params = new Map([[1,"kty"],[2,"kid"],[3,"alg"],[4,"key_ops"],[5,"base_iv"],[-1,"k"]]) as Map<number, string>
export const symmetric_params_to_labels = new Map([...labels_to_symmetric_params.entries()].map((e: any) => e.reverse())) as Map<string, number>

// hss_lms
export const labels_to_hss_lms_params = new Map([[1,"kty"],[2,"kid"],[3,"alg"],[4,"key_ops"],[5,"base_iv"],[-1,"pub"]]) as Map<number, string>
export const hss_lms_params_to_labels = new Map([...labels_to_hss_lms_params.entries()].map((e: any) => e.reverse())) as Map<string, number>

// walnutdsa
export const labels_to_walnutdsa_params = new Map([[1,"kty"],[2,"kid"],[3,"alg"],[4,"key_ops"],[5,"base_iv"],[-1,"n"],[-2,"q"],[-3,"t_values"],[-4,"matrix_1"],[-5,"permutation_1"],[-6,"matrix_2"]]) as Map<number, string>
export const walnutdsa_params_to_labels = new Map([...labels_to_walnutdsa_params.entries()].map((e: any) => e.reverse())) as Map<string, number>